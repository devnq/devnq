version: 2.1
executors:
  jekyll:
    docker:
      - image: cimg/ruby:2.6.9-node
    working_directory: ~/repo
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle

jobs:
  build-test:
    executor: jekyll
    steps:
      - checkout

      # Restore cached dependencies
      - restore_cache:
          keys:
            - node-deps-{{ checksum "package-lock.json" }}
            - ruby-deps-{{ checksum "Gemfile.lock" }}

      # Install and update dependencies
      - run:
          name: Install Dependencies
          command: npm install

      # Save latest cached dependencies
      - save_cache:
          paths:
            - node_modules
          key: node-deps-{{ checksum "package-lock.json" }}

      - save_cache:
          paths:
            - vendor/bundle
          key: ruby-deps-{{ checksum "Gemfile.lock" }}

      # run build
      - run:
          name: Build
          command: npm run build

      # Run tests
      - run:
          name: Run Tests
          command: npm run test

      # Submit coverage
      - run:
          name: Submit Coverage
          command: npm run cov:coveralls

      - store_artifacts:
          path: _site/
          destination: build

  build-test-deploy:
    executor: jekyll
    steps:
      - checkout

      # Restore cached dependencies
      - restore_cache:
          keys:
            - node-deps-{{ checksum "package-lock.json" }}
            - ruby-deps-{{ checksum "Gemfile.lock" }}

      # Setup deployment environment
      - run:
          name: Configure Git for Github Pages Deployment
          command: |
            git config --global user.email "circleci@devnq.org"
            git config --global user.name "Circle CI"

      # Setup dependency environment
      - run:
          name: Uninstall Global Bundle and reinstall the correct version
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler

      - run:
          name: Configure NPM FontAwesome Repository Access
          command: npm config set "@fortawesome:registry" https://npm.fontawesome.com/ && npm config set "//npm.fontawesome.com/:_authToken" $FA_NPM_TOKEN

      # Install and update dependencies
      - run:
          name: Install Dependencies
          command: npm install

      # Save latest cached dependencies
      - save_cache:
          paths:
            - node_modules
          key: node-deps-{{ checksum "package-lock.json" }}

      - save_cache:
          paths:
            - vendor/bundle
          key: ruby-deps-{{ checksum "Gemfile.lock" }}

      # Run build
      - run: npm run build

      # Run tests
      - run:
          name: Run Tests
          command: npm run test

      # Submit coverage
      - run:
          name: Submit Coverage
          command: npm run cov:coveralls

      - store_artifacts:
          path: _site/
          destination: build

      # Deploy the website to GH Pages.
      - deploy:
          command: npm run deploy

      - run:
          name: Create Github Tag
          command: |
            git tag deployment-`date +"%Y-%m-%dT%H-%M-%SZ"` && \
            git push origin deployment-`date +"%Y-%m-%dT%H-%M-%SZ"`

workflows:
  version: 2
  # Build on all source branches and automatically deploy on Main
  build-test-deploy:
    jobs:
      - build-test:
          filters:
            branches:
              ignore:
                - main
                - gh-pages
      - build-test-deploy:
          filters:
            branches:
              only:
                - main
